/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 Buoy-draco.glb
*/

import React, { useState, useEffect } from "react";
import { useGLTF, Box, Plane } from "@react-three/drei";
import { Select } from '@react-three/postprocessing'
import Axios from "axios";

export function Buoy(props) {
  const { nodes, materials } = useGLTF("/Buoy-draco.glb");
  const [hovered, hover] = useState(null)
  const [data, setData] = useState(null);
  const [selected] = useState(false);

  
  useEffect(() => {
    try {
      console.log("mount");
      const fetchData = async () => {
        console.log("fetch data every 1min");
        const response = await Axios.get(
          `${process.env.REACT_APP_API}/data/bus/`
        );
        setData(response.data);
        console.log(response.data);
      };
      fetchData();
      const intervalId = setInterval(fetchData, 1000 * 60);
      return () => {
        console.log("unmount");
        clearInterval(intervalId);
      };
    } catch (error) {
      console.log("error", error);
    }
  }, []);

  return (
    <>
      <Select enabled={hovered} >
        <group
          {...props}
          dispose={null}
          onPointerOver={() => hover(true)} 
          onPointerOut={() => hover(false)}
          onPointerDown={(e) => {
            e.stopPropagation()
            console.log('click', !selected, data)
            props.data(data)
            props.clickMesh(!selected)
          }}
        >
          <group rotation={[-Math.PI / 2, 0, 0]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Circle03.geometry}
              material={materials.orange_glass}
              position={[0, 0, 1.38]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Line02.geometry}
              material={materials.gold}
              position={[0, 0, 0.7]}
            />

            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object01.geometry}
              material={materials.aluminium_orange}
              position={[0, 0, 1.31]}
            ></mesh>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object02.geometry}
              material={materials.aluminium_orange}
              position={[0, 0, 0.92]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Rectangle01.geometry}
              material={materials.gold}
              position={[0, 0, 0.75]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Line03.geometry}
              material={materials.aluminium_orange}
              position={[0, 0, 0.31]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Circle02.geometry}
              material={materials.aluminium_orange}
              position={[0, 0, 1.44]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object03.geometry}
              material={materials.aluminium_orange}
              position={[0, 0, 1.02]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Rectangle02.geometry}
              material={materials.aluminium_orange}
              position={[0, 0, 0.72]}
            />
          </group>
        </group>
      </Select>
    </>
  );
}

useGLTF.preload("/Buoy-draco.glb");
