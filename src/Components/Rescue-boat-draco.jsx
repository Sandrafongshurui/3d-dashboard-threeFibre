/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 rescue-boat-draco.glb
*/

import React, { useState, useEffect } from 'react'
import { useGLTF } from '@react-three/drei'
import { Select } from '@react-three/postprocessing'
import Axios from "axios";

export function RescueBoat(props) {
  const { nodes, materials } = useGLTF('/rescue-boat-draco.glb')
  const [hovered, hover] = useState(null)
  const [selected] = useState(false)
  const [data, setData] = useState(null)

  useEffect(() => {
    try {
      console.log("mount");
      const fetchData = async () => {
        console.log("fetch data every 1min");
        const response = await Axios.get(
          `${process.env.REACT_APP_API}/data/taxi/`
        );
        setData(response.data);
        console.log(response.data);
      };
      fetchData();
      const intervalId = setInterval(fetchData, 1000 * 60);
      return () => {
        console.log("unmount");
        clearInterval(intervalId);
      };
    } catch (error) {
      console.log("error", error);
    }
  }, []);

  return (
    <Select enabled={hovered}>
      <group
        {...props}
        dispose={null}
        onPointerOver={() => hover(true)} 
        onPointerOut={() => hover(false)}
        onPointerDown={(e) => {
          e.stopPropagation();
          console.log("click", !selected, data);
          props.data(data);
          props.clickMesh(!selected);
        }}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Rescue_BoatTOOLS.geometry}
          material={materials['Rescue_Boat:Assault_Boat_MAT']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Rescue_BoatBOAT.geometry}
          material={materials['Rescue_Boat:Assault_Boat_MAT']}
        />
      </group>
    </Select>
  )
}

useGLTF.preload('/rescue-boat-draco.glb')
